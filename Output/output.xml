<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1 (Python 3.11.4 on win32)" generated="20230713 00:52:55.676" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="C:\Users\monsh\PycharmProjects\occazio_app\Tests">
<suite id="s1-s1" name="homeTest" source="C:\Users\monsh\PycharmProjects\occazio_app\Tests\homeTest.robot">
<test id="s1-s1-t1" name="Demarrage" line="8">
<kw name="Run Keywords" library="BuiltIn" type="SETUP">
<arg>base.Start Appium</arg>
<arg>AND</arg>
<arg>base.Launch App</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Start Appium" library="base">
<kw name="Run And Return Rc" library="OperatingSystem">
<arg>${APPIUM_COMMAND}</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230713 00:52:55.956" level="INFO">Running command 'appium -p 4723 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20230713 00:52:55.946" endtime="20230713 00:52:57.410"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Started</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230713 00:52:57.411" endtime="20230713 00:52:57.411"/>
</kw>
<status status="PASS" starttime="20230713 00:52:55.945" endtime="20230713 00:52:57.411"/>
</kw>
<kw name="Launch App" library="base">
<kw name="Open Application" library="AppiumLibrary">
<arg>${Hub}</arg>
<arg>automationName=${ANDROID_AUTOMATION_NAME}</arg>
<arg>platformName=${ANDROID_PLATFORM_NAME}</arg>
<arg>platformVersion=${ANDROID_PLATFORM_VERSION}</arg>
<arg>app=${ANDROID_APP}</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" starttime="20230713 00:52:57.411" endtime="20230713 00:53:10.637"/>
</kw>
<status status="PASS" starttime="20230713 00:52:57.411" endtime="20230713 00:53:10.637"/>
</kw>
<status status="PASS" starttime="20230713 00:52:55.945" endtime="20230713 00:53:10.637"/>
</kw>
<kw name="Unboarding" library="navigate">
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>id=bt_start_showcase</arg>
<arg>15s</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<msg timestamp="20230713 00:53:14.057" level="INFO">criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase
criteria is bt_start_showcase</msg>
<status status="PASS" starttime="20230713 00:53:10.640" endtime="20230713 00:53:14.057"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=bt_start_showcase</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230713 00:53:14.060" level="INFO">Clicking element 'id=bt_start_showcase'.</msg>
<msg timestamp="20230713 00:53:14.233" level="INFO">criteria is bt_start_showcase</msg>
<status status="PASS" starttime="20230713 00:53:14.057" endtime="20230713 00:53:14.233"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>id=indicator_showcase</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<msg timestamp="20230713 00:53:15.153" level="INFO">criteria is indicator_showcase</msg>
<status status="PASS" starttime="20230713 00:53:14.233" endtime="20230713 00:53:15.153"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${buttons}</var>
<arg>Page Should Not Contain Element</arg>
<arg>id=bt_stop_showcase</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Page Should Not Contain Element" library="AppiumLibrary">
<arg>id=bt_stop_showcase</arg>
<doc>Verifies that current page not contains `locator` element.</doc>
<msg timestamp="20230713 00:53:15.209" level="INFO">Current page not contains element 'id=bt_stop_showcase'.</msg>
<msg timestamp="20230713 00:53:15.209" level="INFO">criteria is bt_stop_showcase</msg>
<status status="PASS" starttime="20230713 00:53:15.154" endtime="20230713 00:53:15.209"/>
</kw>
<msg timestamp="20230713 00:53:15.209" level="INFO">${buttons} = True</msg>
<status status="PASS" starttime="20230713 00:53:15.154" endtime="20230713 00:53:15.209"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>4</value>
<iter>
<var name="${index}">0</var>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${buttons}</arg>
<arg>Swipe By Percent</arg>
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<arg>ELSE</arg>
<arg>Exit For Loop</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Swipe By Percent" library="AppiumLibrary">
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="PASS" starttime="20230713 00:53:15.210" endtime="20230713 00:53:16.082"/>
</kw>
<status status="PASS" starttime="20230713 00:53:15.210" endtime="20230713 00:53:16.082"/>
</kw>
<status status="PASS" starttime="20230713 00:53:15.210" endtime="20230713 00:53:16.082"/>
</iter>
<iter>
<var name="${index}">1</var>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${buttons}</arg>
<arg>Swipe By Percent</arg>
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<arg>ELSE</arg>
<arg>Exit For Loop</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Swipe By Percent" library="AppiumLibrary">
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="PASS" starttime="20230713 00:53:16.085" endtime="20230713 00:53:16.883"/>
</kw>
<status status="PASS" starttime="20230713 00:53:16.084" endtime="20230713 00:53:16.883"/>
</kw>
<status status="PASS" starttime="20230713 00:53:16.082" endtime="20230713 00:53:16.883"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${buttons}</arg>
<arg>Swipe By Percent</arg>
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<arg>ELSE</arg>
<arg>Exit For Loop</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Swipe By Percent" library="AppiumLibrary">
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="PASS" starttime="20230713 00:53:16.884" endtime="20230713 00:53:17.680"/>
</kw>
<status status="PASS" starttime="20230713 00:53:16.884" endtime="20230713 00:53:17.680"/>
</kw>
<status status="PASS" starttime="20230713 00:53:16.883" endtime="20230713 00:53:17.680"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${buttons}</arg>
<arg>Swipe By Percent</arg>
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<arg>ELSE</arg>
<arg>Exit For Loop</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Swipe By Percent" library="AppiumLibrary">
<arg>90</arg>
<arg>50</arg>
<arg>10</arg>
<arg>50</arg>
<arg>200</arg>
<doc>Swipe from one percent of the screen to another percent, for an optional duration.
Normal swipe fails to scale for different screen resolutions, this can be avoided using percent.</doc>
<status status="PASS" starttime="20230713 00:53:17.681" endtime="20230713 00:53:18.482"/>
</kw>
<status status="PASS" starttime="20230713 00:53:17.680" endtime="20230713 00:53:18.482"/>
</kw>
<status status="PASS" starttime="20230713 00:53:17.680" endtime="20230713 00:53:18.482"/>
</iter>
<status status="PASS" starttime="20230713 00:53:15.209" endtime="20230713 00:53:18.482"/>
</for>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=v_seekbar_overlay</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230713 00:53:18.488" level="INFO">Clicking element 'id=v_seekbar_overlay'.</msg>
<msg timestamp="20230713 00:53:19.414" level="INFO">criteria is v_seekbar_overlay</msg>
<status status="PASS" starttime="20230713 00:53:18.483" endtime="20230713 00:53:19.414"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=bt_stop_showcase</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230713 00:53:19.417" level="INFO">Clicking element 'id=bt_stop_showcase'.</msg>
<msg timestamp="20230713 00:53:20.228" level="INFO">criteria is bt_stop_showcase</msg>
<status status="PASS" starttime="20230713 00:53:19.414" endtime="20230713 00:53:20.228"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>id=tv_why_user_title</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<msg timestamp="20230713 00:53:21.374" level="INFO">criteria is tv_why_user_title
criteria is tv_why_user_title</msg>
<status status="PASS" starttime="20230713 00:53:20.228" endtime="20230713 00:53:21.374"/>
</kw>
<kw name="Wait Until Element Is Visible" library="AppiumLibrary">
<arg>id=v_click_why_other</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<msg timestamp="20230713 00:53:21.447" level="INFO">criteria is v_click_why_other</msg>
<status status="PASS" starttime="20230713 00:53:21.374" endtime="20230713 00:53:21.447"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=v_click_why_other</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20230713 00:53:21.451" level="INFO">Clicking element 'id=v_click_why_other'.</msg>
<msg timestamp="20230713 00:53:21.609" level="INFO">criteria is v_click_why_other</msg>
<status status="PASS" starttime="20230713 00:53:21.448" endtime="20230713 00:53:21.609"/>
</kw>
<status status="PASS" starttime="20230713 00:53:10.638" endtime="20230713 00:53:21.610"/>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="TEARDOWN">
<arg>Close App</arg>
<arg>AND</arg>
<arg>Stop Appium</arg>
<doc>Executes all the given keywords in a sequence.</doc>
<kw name="Close App" library="base">
<kw name="Close Application" library="AppiumLibrary">
<doc>Closes the current application and also close webdriver session.</doc>
<status status="PASS" starttime="20230713 00:53:21.612" endtime="20230713 00:53:22.131"/>
</kw>
<status status="PASS" starttime="20230713 00:53:21.611" endtime="20230713 00:53:22.131"/>
</kw>
<kw name="Stop Appium" library="base">
<doc>Stops the running Appium server on port 4723</doc>
<kw name="Run And Return Rc" library="OperatingSystem">
<arg>taskkill /F /IM node.exe</arg>
<doc>Runs the given command in the system and returns the return code.</doc>
<msg timestamp="20230713 00:53:22.139" level="INFO">Running command 'taskkill /F /IM node.exe 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20230713 00:53:22.132" endtime="20230713 00:53:22.426"/>
</kw>
<status status="PASS" starttime="20230713 00:53:22.132" endtime="20230713 00:53:22.427"/>
</kw>
<status status="PASS" starttime="20230713 00:53:21.611" endtime="20230713 00:53:22.427"/>
</kw>
<tag>test_001</tag>
<status status="PASS" starttime="20230713 00:52:55.944" endtime="20230713 00:53:22.427"/>
</test>
<status status="PASS" starttime="20230713 00:52:55.923" endtime="20230713 00:53:22.430"/>
</suite>
<status status="PASS" starttime="20230713 00:52:55.677" endtime="20230713 00:53:22.433"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">test_001</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="homeTest">Tests.homeTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
